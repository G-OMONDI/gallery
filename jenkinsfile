pipeline {
    agent any

    tools {
        nodejs 'NodeJS-24'
    }

    environment {
        SLACK_WEBHOOK = 'https://hooks.slack.com/services/T093UNB6D24/B0934AMQXSA/p0WhL4QSgU0Yq9XOh5k5K4M'
        RENDER_DEPLOY_HOOK = 'https://api.render.com/deploy/srv-d1ej2v2li9vc73a4mf1g?key=eGUcplom-To'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'master', url: 'https://github.com/d-0pZ/gallery.git'
            }
        }

        stage('Initial Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'npm test'
            }
            post {
                failure {
                    emailext(
                        subject: "‚ùå Test Failed: ${env.JOB_NAME} - ${env.BUILD_NUMBER}",
                        body: "Tests failed in build #${env.BUILD_NUMBER}.\nCheck logs at: ${env.BUILD_URL}",
                        to: "glen.omondi@student.moringaschool.com"
                    )
                }
            }
        }

        stage('Deploy to Render') {
            steps {
                echo 'Deploying to Render...'
                sh """
                    curl -X POST "${RENDER_DEPLOY_HOOK}"
                """
            }
            post {
                success {
                    echo 'Sending Slack notification...'
                    sh """
                    curl -X POST -H 'Content-type: application/json' \
                    --data '{"text":"‚úÖ *Build #${BUILD_NUMBER}* successfully deployed!\\nüåê [View Site](https://gallery-pxfl.onrender.com)\\nüö© MILESTONE 2, 3, and 4 deployed."}' \
                    "${SLACK_WEBHOOK}"
                    """
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline completed successfully!'
        }
        failure {
            echo '‚ùå Pipeline failed!'
        }
    }
}

    }
}
// This Jenkinsfile defines a simple pipeline with one stage that prints a message to the console.
// It uses the declarative syntax of Jenkins pipelines, which is more structured and easier to read.
// The `agent any` directive allows the pipeline to run on any available agent.
// The `echo` step is used to print messages to the console output.
// This pipeline can be used to verify that Jenkins is set up correctly and can execute basic tasks